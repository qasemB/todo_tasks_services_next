openapi: 3.0.0
info:
  title: Next.js API with Swagger
  version: 1.0.0
  description: API documentation for a Next.js project
servers:
  - url: "http://localhost:3000"
components:
  schemas:
    CreateUser:
      type: object
      required:
        - phone
        - password
      properties:
        phone:
          type: string
          description: The phone number of the user.
          example: "+1234567890"
        password:
          type: string
          description: The password for the user account.
          example: "password123"
        email:
          type: string
          description: The email address of the user.
          example: "user@example.com"
        firstName:
          type: string
          description: The first name of the user.
          example: "John"
        lastName:
          type: string
          description: The last name of the user.
          example: "Doe"
        role:
          type: string
          description: The role assigned to the user.
          example: "user"
        gender:
          type: integer
          description: The gender of the user.
          example: 1
    UpdateUser:
      type: object
      properties:
        phone:
          type: string
          description: The phone number of the user.
          example: "+1234567890"
        password:
          type: string
          description: The password for the user account.
          example: "password123"
        email:
          type: string
          description: The email address of the user.
          example: "user@example.com"
        firstName:
          type: string
          description: The first name of the user.
          example: "John"
        lastName:
          type: string
          description: The last name of the user.
          example: "Doe"
        role:
          type: string
          description: The role assigned to the user.
          example: "user"
        gender:
          type: integer
          description: The gender of the user.
          example: 1
paths:
  /api/users:
    post:
      tags:
        - Users
      summary: Create a new user
      description: This endpoint creates a new user with the provided details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUser"
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the created user.
                    example: 1
                  phone:
                    type: string
                    description: The phone number of the user.
                    example: "+1234567890"
                  email:
                    type: string
                    description: The email address of the user.
                    example: "user@example.com"
                  firstName:
                    type: string
                    description: The first name of the user.
                    example: "John"
                  lastName:
                    type: string
                    description: The last name of the user.
                    example: "Doe"
                  role:
                    type: string
                    description: The role assigned to the user.
                    example: "user"
                  gender:
                    type: integer
                    description: The gender of the user represented as an integer.
                    example: 1
                  createdAt:
                    type: string
                    format: date-time
                    description: The date and time when the user was created.
                    example: "2024-09-17T08:00:00.000Z"
        "500":
          description: Error creating user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Error creating user"
    get:
      tags:
        - Users
      summary: Retrieve a list of users
      description: This endpoint retrieves a list of all users.
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The ID of the user.
                      example: 1
                    phone:
                      type: string
                      description: The phone number of the user.
                      example: "+1234567890"
                    email:
                      type: string
                      description: The email address of the user.
                      example: "user@example.com"
                    firstName:
                      type: string
                      description: The first name of the user.
                      example: "John"
                    lastName:
                      type: string
                      description: The last name of the user.
                      example: "Doe"
                    role:
                      type: string
                      description: The role assigned to the user.
                      example: "user"
                    gender:
                      type: integer
                      description: The gender of the user represented as an integer.
                      example: 1
                    createdAt:
                      type: string
                      format: date-time
                      description: The date and time when the user was created.
                      example: "2024-09-17T08:00:00.000Z"
        "500":
          description: Error fetching users
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Error fetching users"
  /api/users/{id}:
    get:
      tags:
        - Users
      summary: Retrieve a user by ID
      description: Fetch a user from the database using their ID.
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the user to retrieve.
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: The user information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the user.
                    example: 1
                  phone:
                    type: string
                    description: The phone number of the user.
                    example: "1234567890"
                  password:
                    type: string
                    description: The password of the user.
                    example: "hashedpassword"
                  email:
                    type: string
                    description: The email of the user.
                    example: "john.doe@example.com"
                  firstName:
                    type: string
                    description: The first name of the user.
                    example: "John"
                  lastName:
                    type: string
                    description: The last name of the user.
                    example: "Doe"
                  role:
                    type: string
                    description: The role of the user.
                    example: "admin"
                  gender:
                    type: integer
                    description: The gender of the user.
                    example: 1
                  createdAt:
                    type: string
                    format: date-time
                    description: The creation date of the user.
                    example: "2024-09-17T12:34:56Z"
        "400":
          description: ID is required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: "ID is required"
        "404":
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: "User not found"
        "500":
          description: Error fetching user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: "Error fetching user"
    put:
      summary: Update a user by ID
      tags:
        - Users
      description: Update a user's information using their ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: The ID of the user to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUser"
      responses:
        "200":
          description: User updated successfully.
        "400":
          description: ID is required.
        "500":
          description: Error updating user.
    patch:
      summary: Update a user by ID
      tags:
        - Users
      description: Update a user's information using their ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: The ID of the user to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUser"
      responses:
        "200":
          description: User updated successfully.
        "400":
          description: ID is required.
        "500":
          description: Error updating user.
    delete:
      summary: Delete a user by ID
      tags:
        - Users
      description: Delete a user from the database using their ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: The ID of the user to delete.
      responses:
        "204":
          description: User deleted successfully.
        "400":
          description: ID is required.
        "500":
          description: Error deleting user.
